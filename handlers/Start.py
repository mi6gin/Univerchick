from aiogram import Dispatcher, types
from aiogram.filters import Command, StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from handlers.user import Check
from univer20 import Username
from handlers.Authentification import Keyboard
class FSM(StatesGroup):
    Start = State()
    Auth = State()
    End = State()
    Finish = State()
    Deauth = State()

async def start(message: types.Message, state: FSMContext):
    await state.set_state(FSM.Start)
    data = await state.get_data()
    message_to_delete = data.get('message_to_delete')
    if message_to_delete:
        await message_to_delete.delete()
    user_id = message.from_user.id
    first = await Check.check(message)
    if first is not False:
        result = await Username.Username(message, user_id)
        if "name" in result:
            message_to_delete = await message.answer(
                text=f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å {result["name"]} –≤ —Å–∏—Å—Ç–µ–º—É –ö–∞—Ä–¢–£ –∏–º–µ–Ω–∏ –ê.–°–∞–≥–∏–Ω–æ–≤–∞ "–ë–∞–ª–∞ “Ø–π—Ä–µ–Ω!"\n\n–§–ò–û: {result["name"]}\n–ö—É—Ä—Å: {result["course"]}\n–§–∞–∫—É–ª—å—Ç–µ—Ç: {result["faculty"]}',
                reply_markup=Keyboard.get_keyboard_deauth())
            await state.update_data(message_to_delete=message_to_delete)

    else:
        await state.set_state(FSM.Start)
        message_to_delete = await message.reply(
            text="–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è –≤ –±–æ—Ç–µ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞üéì\n–Ø –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å —Ç–µ–±–µ –ø–æ–ª—É—á–∏—Ç—å –≤—Å—é –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏, —ç–∫–∑–∞–º–µ–Ω–∞—Ö, –∑–∞–¥–∞–Ω–∏—è—Ö –∏ –º–Ω–æ–≥–æ–º –¥—Ä—É–≥–æ–º.\n–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∞–≤—Ç–æ—Ä–∏–∑—É–π—Å—è, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º –±–æ—Ç–∞. –≠—Ç–æ –ø–æ–∑–≤–æ–ª–∏—Ç —Ç–µ–±–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –Ω–∞—à–µ–≥–æ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç—Å–∫–æ–≥–æ –±–æ—Ç–∞.\nüîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Å—Ç–∞! –ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è –Ω–∏–∂–µ –∏ —Å–ª–µ–¥—É–π —É–∫–∞–∑–∞–Ω–∏—è–º. –ü–æ–º–Ω–∏, —á—Ç–æ –±–µ–∑ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Ç—ã –Ω–µ —Å–º–æ–∂–µ—à—å –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º –±–æ—Ç–∞."
            , reply_markup=Keyboard.get_keyboard_auth()
        )
        await state.update_data(message_to_delete=message_to_delete)

def register_handlers_start(nihao: Dispatcher):
    nihao.message.register(start, Command('start'))
    nihao.message.register(start, StateFilter(FSM.Start))